{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\PDMA\\\\code\\\\front\\\\src\\\\screen\\\\LoginScreen.js\";\nimport React from \"react\";\nimport { Form, Input, Button, Checkbox, Col, Row, message, Modal } from \"antd\";\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\nconst validateMessages = {\n  required: '${label} is required!',\n  types: {\n    email: '${label} is not validate email!',\n    number: '${label} is not a validate number!'\n  },\n  number: {\n    range: '${label} must be between ${min} and ${max}'\n  }\n};\nexport class LoginScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onFinish = values => {\n      console.log('Success:', values);\n      this.checkUser(values.username, values.password);\n    };\n\n    this.onFinishFailed = errorInfo => {\n      console.log('Failed:', errorInfo);\n    };\n\n    this.registerFinish = values => {\n      console.log(values);\n      this.register(values.user);\n    };\n\n    this.register = user => {\n      let userStr = JSON.stringify(user);\n      let opts = {\n        method: 'POST',\n        body: userStr,\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch('http://3.85.56.92:8088/register', opts).then(response => response.json()).then(res => {\n        console.log(res);\n\n        switch (res.status) {\n          case 0:\n            message.error(res.message);\n            break;\n\n          case 1:\n            message.info(res.message);\n            this.setState({\n              visible: false\n            });\n        }\n      });\n    };\n\n    this.alert = res => {\n      switch (res.status) {\n        case 0:\n          return message.error(res.message);\n\n        case -1:\n          return message.error(res.message);\n\n        case 1:\n        case 100:\n          return this.props.history.push({\n            pathname: '/',\n            state: res.user\n          });\n      }\n    };\n\n    this.checkUser = (username, pwd) => {\n      let data = {\n        username: username,\n        password: pwd\n      };\n      let datastr = JSON.stringify(data);\n      let opts = {\n        method: 'POST',\n        body: datastr,\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch('http://3.85.56.92:8088/login', opts).then(response => response.json()).then(res => {\n        console.log(res);\n        this.alert(res);\n      }).catch(function (ex) {\n        console.log(ex);\n      });\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleCancel = e => {\n      console.log(e);\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.state = {\n      visible: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 827,\n        width: '100%',\n        backgroundImage: \"url(\" + require(\"../002.jpg\") + \")\",\n        backgroundSize: 'cover',\n        backgroundPosition: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, Object.assign({}, layout, {\n      name: \"basic\",\n      initialValues: {\n        remember: true\n      },\n      onFinish: this.onFinish,\n      onFinishFailed: this.onFinishFailed,\n      style: {\n        backgroundColor: \"white\",\n        padding: 25,\n        position: 'center',\n        marginTop: 200,\n        borderRadius: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Username\",\n      name: \"username\",\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Password\",\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailLayout, {\n      name: \"remember\",\n      valuePropName: \"checked\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 33\n      }\n    }, \"Remember me\")), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      style: {\n        width: '50%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 33\n      }\n    }, \"\\u767B\\u9646\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 33\n      }\n    }), \"Or\", /*#__PURE__*/React.createElement(Button, {\n      type: \"link\",\n      onClick: this.showModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 33\n      }\n    }, \"Register Now\"), /*#__PURE__*/React.createElement(Modal, {\n      title: \"Basic Modal\",\n      visible: this.state.visible,\n      footer: null,\n      onCancel: this.handleCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form, Object.assign({}, layout, {\n      name: \"nest-messages\",\n      onFinish: this.registerFinish,\n      validateMessages: validateMessages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Item, {\n      name: ['user', 'username'],\n      label: \"Username\",\n      rules: [{\n        required: true\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: ['user', 'email'],\n      label: \"Email\",\n      rules: [{\n        type: 'email',\n        required: true\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: ['user', 'password'],\n      label: \"Password\",\n      rules: [{\n        required: true\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: 'repeat',\n      label: \"Repeat Password\",\n      rules: [{\n        required: true,\n        message: 'Please confirm your password!'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(rule, value) {\n          if (!value || getFieldValue(['user', 'password']) === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject('The two passwords that you entered do not match!');\n        }\n\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      wrapperCol: { ...layout.wrapperCol,\n        offset: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 45\n      }\n    }, \"Submit\"))))))), /*#__PURE__*/React.createElement(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Dell/PDMA/code/front/src/screen/LoginScreen.js"],"names":["React","Form","Input","Button","Checkbox","Col","Row","message","Modal","layout","labelCol","span","wrapperCol","tailLayout","offset","validateMessages","required","types","email","number","range","LoginScreen","Component","constructor","props","onFinish","values","console","log","checkUser","username","password","onFinishFailed","errorInfo","registerFinish","register","user","userStr","JSON","stringify","opts","method","body","headers","fetch","then","response","json","res","status","error","info","setState","visible","alert","history","push","pathname","state","pwd","data","datastr","catch","ex","showModal","handleCancel","e","render","height","width","backgroundImage","require","backgroundSize","backgroundPosition","remember","backgroundColor","padding","position","marginTop","borderRadius","type","getFieldValue","validator","rule","value","Promise","resolve","reject"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Form, Input, Button, Checkbox, Col, Row, message, Modal} from \"antd\";\r\n\r\nconst layout = {\r\n    labelCol: {span: 8},\r\n    wrapperCol: {span: 16},\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {offset: 8, span: 16},\r\n};\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n        email: '${label} is not validate email!',\r\n        number: '${label} is not a validate number!',\r\n    },\r\n    number: {\r\n        range: '${label} must be between ${min} and ${max}',\r\n    },\r\n};\r\n\r\nexport class LoginScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: false\r\n        }\r\n    }\r\n\r\n    onFinish = values => {\r\n        console.log('Success:', values);\r\n        this.checkUser(values.username, values.password)\r\n    };\r\n\r\n    onFinishFailed = errorInfo => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    registerFinish = values => {\r\n        console.log(values)\r\n        this.register(values.user)\r\n    }\r\n    register = (user) => {\r\n        let userStr = JSON.stringify(user)\r\n        let opts = {\r\n            method: 'POST',\r\n            body: userStr,\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        fetch('http://3.85.56.92:8088/register', opts)\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                console.log(res)\r\n                switch (res.status) {\r\n                    case 0:\r\n                        message.error(res.message);\r\n                        break;\r\n                    case 1:\r\n                        message.info(res.message);\r\n                        this.setState({visible: false})\r\n                }\r\n            })\r\n    }\r\n    alert = res => {\r\n        switch (res.status) {\r\n            case 0:\r\n                return message.error(res.message)\r\n            case -1:\r\n                return message.error(res.message)\r\n            case 1:case 100:\r\n                return this.props.history.push({pathname:'/',state:res.user})\r\n        }\r\n    };\r\n    checkUser = (username, pwd) => {\r\n        let data = {\r\n            username: username,\r\n            password: pwd\r\n        }\r\n        let datastr = JSON.stringify(data)\r\n\r\n        let opts = {\r\n            method: 'POST',\r\n            body: datastr,\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        fetch('http://3.85.56.92:8088/login', opts)\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                console.log(res)\r\n                this.alert(res)\r\n            }).catch(function (ex) {\r\n            console.log(ex)\r\n        })\r\n    };\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n    handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    height: 827,\r\n                    width: '100%',\r\n                    backgroundImage: \"url(\" + require(\"../002.jpg\") + \")\",\r\n                    backgroundSize: 'cover',\r\n                    backgroundPosition: \"center\"\r\n                }}\r\n            >\r\n                <Row>\r\n                    <Col span={8}/>\r\n                    <Col span={8}>\r\n                        <Form\r\n                            {...layout}\r\n                            name=\"basic\"\r\n                            initialValues={{remember: true}}\r\n                            onFinish={this.onFinish}\r\n                            onFinishFailed={this.onFinishFailed}\r\n                            style={{\r\n                                backgroundColor: \"white\",\r\n                                padding: 25,\r\n                                position: 'center',\r\n                                marginTop: 200,\r\n                                borderRadius: 25,\r\n                            }}\r\n                        >\r\n                            <Form.Item\r\n                                label=\"Username\"\r\n                                name=\"username\"\r\n                                rules={[{required: true, message: 'Please input your username!'}]}\r\n                            >\r\n                                <Input/>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                label=\"Password\"\r\n                                name=\"password\"\r\n                                rules={[{required: true, message: 'Please input your password!'}]}\r\n                            >\r\n                                <Input.Password/>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n                                <Checkbox>Remember me</Checkbox>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item {...tailLayout}>\r\n                                <Button type=\"primary\" htmlType=\"submit\" style={{width: '50%'}}>\r\n                                    登陆\r\n                                </Button>\r\n                                <br/>\r\n                                Or\r\n                                <Button type={\"link\"} onClick={this.showModal}>Register Now</Button>\r\n                                <Modal\r\n                                    title=\"Basic Modal\"\r\n                                    visible={this.state.visible}\r\n                                    footer={null}\r\n                                    onCancel={this.handleCancel}\r\n                                >\r\n                                    <Form {...layout} name=\"nest-messages\" onFinish={this.registerFinish}\r\n                                          validateMessages={validateMessages}>\r\n                                        <Form.Item name={['user', 'username']} label=\"Username\"\r\n                                                   rules={[{required: true}]}>\r\n                                            <Input/>\r\n                                        </Form.Item>\r\n                                        <Form.Item name={['user', 'email']} label=\"Email\"\r\n                                                   rules={[{type: 'email', required: true}]}>\r\n                                            <Input/>\r\n                                        </Form.Item>\r\n                                        <Form.Item name={['user', 'password']} label=\"Password\"\r\n                                                   rules={[{required: true}]}>\r\n                                            <Input/>\r\n                                        </Form.Item>\r\n                                        <Form.Item name={'repeat'} label=\"Repeat Password\"\r\n                                                   rules={[\r\n                                                       {\r\n                                                           required: true,\r\n                                                           message: 'Please confirm your password!',\r\n                                                       },\r\n                                                       ({getFieldValue}) => ({\r\n                                                           validator(rule, value) {\r\n                                                               if (!value || getFieldValue(['user', 'password']) === value) {\r\n                                                                   return Promise.resolve();\r\n                                                               }\r\n                                                               return Promise.reject('The two passwords that you entered do not match!');\r\n                                                           },\r\n                                                       }),\r\n                                                   ]}>\r\n                                            <Input/>\r\n                                        </Form.Item>\r\n                                        <Form.Item wrapperCol={{...layout.wrapperCol, offset: 8}}>\r\n                                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                </Modal>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Col>\r\n                    <Col span={8}/>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}