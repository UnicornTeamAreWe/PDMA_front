{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\PDMA\\\\code\\\\front\\\\src\\\\component\\\\AmountByYear.js\";\nimport React from 'react';\nimport Plot from 'react-plotly.js';\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport { Typography } from \"antd\";\nconst {\n  Title,\n  Paragraph,\n  Text\n} = Typography;\n\nconst getTaobaoAnalysis = async (id, setData) => {\n  axios.post(\"http://3.85.56.92:8088/getTaobaoAnalysis\", qs.stringify({\n    id: id\n  })).then(response => {\n    setData(response.data);\n  }).catch(error => console.log(error));\n};\n\nexport function AmountByYear() {\n  const [Taobao, setTaobao] = React.useState([]);\n  React.useEffect(() => {\n    getTaobaoAnalysis(1, data => setTaobao(data)).catch();\n  }, []);\n  let min = Math.min.apply(Math, Taobao.map(item => {\n    return item.year;\n  }));\n  let Year = new Date().getFullYear();\n  let Gap = Year - min;\n  let AmountByYear = Array.from({\n    length: Gap + 1\n  }).fill(0);\n  let year_arr = [];\n\n  let Amount = () => {\n    Taobao.forEach(item => {\n      AmountByYear[2020 - item.year] += item.amount;\n    });\n\n    for (let i = 0; i <= Gap; ++i) {\n      let y = Year - i;\n      year_arr.push(y.toString());\n    }\n  };\n\n  Amount();\n  let maxNum = Math.max.apply(null, AmountByYear);\n  let minNum = Math.min.apply(null, AmountByYear);\n  let Max_year = Year - AmountByYear.findIndex(item => item === maxNum);\n  let Min_year = Year - AmountByYear.findIndex(item => item === minNum);\n  let all = eval(AmountByYear.join(\"+\"));\n  let average = (all / AmountByYear.length).toFixed(2);\n  let data1 = [{\n    x: year_arr,\n    y: AmountByYear,\n    type: 'bar'\n  }];\n  let data2 = [{\n    x: year_arr,\n    y: AmountByYear,\n    type: 'scatter'\n  }];\n  let data3 = [{\n    values: AmountByYear,\n    labels: year_arr,\n    type: 'pie',\n    hole: .4\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Plot, {\n    data: data1,\n    layout: {\n      width: 600,\n      height: 400,\n      title: 'Amount By Year'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Plot, {\n    data: data2,\n    layout: {\n      width: 600,\n      height: 400,\n      title: 'Amount By Year'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Plot, {\n    data: data3,\n    layout: {\n      width: 600,\n      height: 400,\n      title: 'Amount By Year'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"\\u5206\\u6790\\u62A5\\u544A\"), /*#__PURE__*/React.createElement(Paragraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, \"\\u56FE\\u4E2D\\u5C55\\u793A\\u4E86\\u60A8\\u5728\\u6DD8\\u5B9D\\u4E0A\\u6BCF\\u5E74\\u6D88\\u8D39\\u7684\\u91D1\\u989D\\uFF0C\\u60A8\\u53EF\\u4EE5\\u4ECE\\u4E2D\\u83B7\\u77E5\\u6BCF\\u5E74\\u6D88\\u8D39\\u91D1\\u989D\\u7684\\u5927\\u5C0F\\u3002\\u7531\\u56FE\\u53EF\\u77E5\\uFF0C\\u6D88\\u8D39\\u91D1\\u989D\\u6700\\u591A\\u7684\\u5E74\\u4EFD\\u4E3A\", Max_year, \"\\u5E74\\uFF0C\\u5171\\u6D88\\u8D39\", maxNum.toFixed(2), \"\\u5143\\uFF0C\\u6D88\\u8D39\\u91D1\\u989D\\u6700\\u5C11\\u7684\\u5E74\\u4EFD\\u4E3A\", Min_year, \"\\u5E74\\uFF0C\\u5171\\u6D88\\u8D39\", minNum.toFixed(2), \"\\u5143, \\u5E73\\u5747\\u6BCF\\u5E74\\u6D88\\u8D39\", average, \"\\u5143\\u3002\")));\n}","map":{"version":3,"sources":["C:/Users/Dell/PDMA/code/front/src/component/AmountByYear.js"],"names":["React","Plot","axios","qs","Typography","Title","Paragraph","Text","getTaobaoAnalysis","id","setData","post","stringify","then","response","data","catch","error","console","log","AmountByYear","Taobao","setTaobao","useState","useEffect","min","Math","apply","map","item","year","Year","Date","getFullYear","Gap","Array","from","length","fill","year_arr","Amount","forEach","amount","i","y","push","toString","maxNum","max","minNum","Max_year","findIndex","Min_year","all","eval","join","average","toFixed","data1","x","type","data2","data3","values","labels","hole","width","height","title"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\nimport axios from \"axios\";\r\nimport qs from \"qs\";\r\nimport {Typography} from \"antd\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\nconst getTaobaoAnalysis = async (id,setData)=>{\r\n    axios.post(\"http://3.85.56.92:8088/getTaobaoAnalysis\", qs.stringify({ id: id }))\r\n        .then(response =>{\r\n            setData(response.data)\r\n        })\r\n        .catch(error=>console.log(error));\r\n};\r\n\r\nexport function AmountByYear() {\r\n    const [Taobao, setTaobao] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        getTaobaoAnalysis(1,(data)=>setTaobao(data)).catch()\r\n    },[]);\r\n\r\n    let min = Math.min.apply(Math, Taobao.map(item=> {return item.year}));\r\n    let Year = new Date().getFullYear();\r\n    let Gap = Year - min;\r\n    let AmountByYear = Array.from({length:Gap+1}).fill(0)\r\n    let year_arr = [];\r\n    let Amount = () =>{\r\n        Taobao.forEach(item =>{\r\n            AmountByYear[2020-item.year] += item.amount;\r\n        });\r\n        for (let i = 0; i <= Gap; ++i){\r\n            let y = Year-i;\r\n            year_arr.push(y.toString());\r\n        }\r\n    }\r\n    Amount();\r\n    let maxNum = Math.max.apply(null,AmountByYear);\r\n    let minNum = Math.min.apply(null,AmountByYear);\r\n    let Max_year = Year-AmountByYear.findIndex((item) => item === maxNum);\r\n    let Min_year = Year-AmountByYear.findIndex((item) => item === minNum);\r\n    let all = eval(AmountByYear.join(\"+\"));\r\n    let average = (all/AmountByYear.length).toFixed(2);\r\n\r\n    let data1 = [\r\n        {\r\n            x: year_arr,\r\n            y: AmountByYear,\r\n            type: 'bar'\r\n        }\r\n    ];\r\n\r\n    let data2 = [\r\n        {\r\n            x: year_arr,\r\n            y: AmountByYear,\r\n            type: 'scatter'\r\n        }\r\n    ];\r\n\r\n    let data3 = [\r\n        {\r\n            values: AmountByYear,\r\n            labels: year_arr,\r\n            type: 'pie',\r\n            hole: .4\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <Plot\r\n                data={data1}\r\n                layout={ {width: 600, height: 400, title: 'Amount By Year'} }\r\n            />\r\n            <Plot\r\n                data={data2}\r\n                layout={ {width: 600, height: 400, title: 'Amount By Year'} }\r\n            />\r\n            <Plot\r\n                data={data3}\r\n                layout={ {width: 600, height: 400, title: 'Amount By Year'} }\r\n            />\r\n            <Typography>\r\n                <Title>分析报告</Title>\r\n                <Paragraph>\r\n                    图中展示了您在淘宝上每年消费的金额，您可以从中获知每年消费金额的大小。由图可知，消费金额最多的年份为{Max_year}年，共消费{maxNum.toFixed(2)}元，消费金额最少的年份为{Min_year}年，共消费{minNum.toFixed(2)}元, 平均每年消费{average}元。\r\n                </Paragraph>\r\n            </Typography>\r\n        </div>\r\n        );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}