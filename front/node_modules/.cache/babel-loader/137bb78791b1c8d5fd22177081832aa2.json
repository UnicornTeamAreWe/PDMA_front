{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\PDMA\\\\code\\\\front\\\\src\\\\component\\\\OrderNumberByYearMonth.js\";\nimport React from 'react';\nimport Plot from 'react-plotly.js';\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport { Typography } from \"antd\";\nconst {\n  Title,\n  Paragraph,\n  Text\n} = Typography;\n\nconst getTaobaoAnalysis = async (id, setData) => {\n  axios.post(\"http://3.85.56.92:8088/getTaobaoAnalysis\", qs.stringify({\n    id: id\n  })).then(response => {\n    setData(response.data);\n  }).catch(error => console.log(error));\n};\n\nexport function OrderNumberByYearMonth() {\n  const [Taobao, setTaobao] = React.useState([]);\n  React.useEffect(() => {\n    getTaobaoAnalysis(1, data => setTaobao(data)).catch();\n  }, []);\n  let Month_arr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  let min = Math.min.apply(Math, Taobao.map(item => {\n    return item.year;\n  }));\n  let data1 = [];\n  let data2 = [];\n  let Year = new Date().getFullYear();\n  let Gap = Year - min;\n  let OrderNumberByYearMonth = [];\n\n  let init = () => {\n    for (let i = 0; i <= Gap; ++i) {\n      OrderNumberByYearMonth[i] = [];\n\n      for (let j = 0; j <= 12; ++j) {\n        OrderNumberByYearMonth[i][j] = 0;\n      }\n    }\n  };\n\n  init();\n\n  let OrderNumber = () => {\n    Taobao.forEach(item => {\n      OrderNumberByYearMonth[2020 - item.year][item.month - 1] += item.order_number;\n    });\n  };\n\n  OrderNumber();\n\n  for (let i = 0; i <= Gap; ++i) {\n    let y = Year - i;\n    let trace = {\n      x: Month_arr,\n      y: OrderNumberByYearMonth[i],\n      name: y,\n      type: 'bar'\n    };\n    data1.push(trace);\n  }\n\n  for (let i = 0; i <= Gap; ++i) {\n    let y = Year - i;\n    let trace = {\n      x: Month_arr,\n      y: OrderNumberByYearMonth[i],\n      name: y,\n      type: 'scatter'\n    };\n    data2.push(trace);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Plot, {\n    data: data1,\n    layout: {\n      width: 600,\n      height: 400,\n      title: 'Order Number By Year Month',\n      barmode: 'group'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Plot, {\n    data: data2,\n    layout: {\n      width: 600,\n      height: 400,\n      title: 'Order Number By Year Month',\n      barmode: 'group'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, \"\\u5206\\u6790\\u62A5\\u544A\"), /*#__PURE__*/React.createElement(Paragraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"\\u56FE\\u4E2D\\u5C55\\u793A\\u4E86\\u6BCF\\u5E74\\u60A8\\u5728\\u6DD8\\u5B9D\\u4E0A\\u6BCF\\u4E2A\\u6708\\u8BA2\\u5355\\u7684\\u6570\\u91CF\\uFF0C\\u60A8\\u53EF\\u4EE5\\u4ECE\\u4E2D\\u83B7\\u77E5\\u6BCF\\u4E2A\\u6708\\u6D88\\u8D39\\u6570\\u91CF\\u7684\\u8D70\\u52BF\\u3002\")));\n}","map":{"version":3,"sources":["C:/Users/Dell/PDMA/code/front/src/component/OrderNumberByYearMonth.js"],"names":["React","Plot","axios","qs","Typography","Title","Paragraph","Text","getTaobaoAnalysis","id","setData","post","stringify","then","response","data","catch","error","console","log","OrderNumberByYearMonth","Taobao","setTaobao","useState","useEffect","Month_arr","min","Math","apply","map","item","year","data1","data2","Year","Date","getFullYear","Gap","init","i","j","OrderNumber","forEach","month","order_number","y","trace","x","name","type","push","width","height","title","barmode"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\nimport axios from \"axios\";\r\nimport qs from \"qs\";\r\nimport {Typography} from \"antd\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\n\r\nconst getTaobaoAnalysis = async (id,setData)=>{\r\n    axios.post(\"http://3.85.56.92:8088/getTaobaoAnalysis\", qs.stringify({ id: id }))\r\n        .then(response =>{\r\n            setData(response.data)\r\n        })\r\n        .catch(error=>console.log(error));\r\n};\r\n\r\nexport function OrderNumberByYearMonth() {\r\n    const [Taobao, setTaobao] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        getTaobaoAnalysis(1,(data)=>setTaobao(data)).catch()\r\n    },[]);\r\n\r\n    let Month_arr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    let min = Math.min.apply(Math, Taobao.map(item=> {return item.year}));\r\n    let data1 = [];\r\n    let data2 = [];\r\n    let Year = new Date().getFullYear();\r\n    let Gap = Year - min;\r\n    let OrderNumberByYearMonth = [];\r\n\r\n    let init = () =>{\r\n        for (let i = 0; i <= Gap; ++i){\r\n            OrderNumberByYearMonth[i] = [];\r\n            for(let j = 0; j <= 12; ++j){\r\n                OrderNumberByYearMonth[i][j] = 0;\r\n            }\r\n        }\r\n    }\r\n    init();\r\n\r\n    let OrderNumber = () =>{\r\n        Taobao.forEach(item =>{\r\n            OrderNumberByYearMonth[2020-item.year][item.month-1] += item.order_number;\r\n        });\r\n    }\r\n    OrderNumber();\r\n\r\n    for (let i = 0; i <= Gap; ++i){\r\n        let y = Year - i;\r\n        let trace = {\r\n                x: Month_arr,\r\n                y: OrderNumberByYearMonth[i],\r\n                name: y,\r\n                type: 'bar'\r\n            };\r\n        data1.push(trace);\r\n    }\r\n\r\n    for (let i = 0; i <= Gap; ++i){\r\n        let y = Year - i;\r\n        let trace = {\r\n            x: Month_arr,\r\n            y: OrderNumberByYearMonth[i],\r\n            name: y,\r\n            type: 'scatter'\r\n        };\r\n        data2.push(trace);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Plot\r\n            data={data1}\r\n            layout={{\r\n                width: 600,\r\n                height: 400,\r\n                title: 'Order Number By Year Month',\r\n                barmode: 'group'\r\n            }}/>\r\n\r\n            <Plot\r\n                data={data2}\r\n                layout={{\r\n                    width: 600,\r\n                    height: 400,\r\n                    title: 'Order Number By Year Month',\r\n                    barmode: 'group'\r\n                }}/>\r\n            <Typography>\r\n                <Title>分析报告</Title>\r\n                <Paragraph>\r\n                    图中展示了每年您在淘宝上每个月订单的数量，您可以从中获知每个月消费数量的走势。\r\n                </Paragraph>\r\n            </Typography>\r\n        </div>\r\n\r\n            );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}