{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\PDMA\\\\code\\\\front\\\\src\\\\component\\\\AmountByMonth.js\";\nimport React from 'react';\nimport Plot from 'react-plotly.js';\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport { Typography } from \"antd\";\nconst {\n  Title,\n  Paragraph,\n  Text\n} = Typography;\n\nconst getTaobaoAnalysis = async (id, setData) => {\n  axios.post(\"http://localhost:8088/getTaobaoAnalysis\", qs.stringify({\n    id: id\n  })).then(response => {\n    setData(response.data);\n  }).catch(error => console.log(error));\n};\n\nexport function AmountByMonth() {\n  const [Taobao, setTaobao] = React.useState([]);\n  React.useEffect(() => {\n    getTaobaoAnalysis(1, data => setTaobao(data)).catch();\n  }, []);\n  console.log(Taobao);\n  let Month_arr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  let AmountByMonth = Array.from({\n    length: 12\n  }).fill(0);\n\n  let Amount = () => {\n    Taobao.forEach(item => {\n      AmountByMonth[item.month - 1] += item.amount;\n    });\n  };\n\n  Amount();\n  let maxNum = Math.max.apply(null, AmountByMonth);\n  let minNum = Math.min.apply(null, AmountByMonth);\n  let Max_month = AmountByMonth.findIndex(item => item === maxNum) + 1;\n  let Min_month = AmountByMonth.findIndex(item => item === minNum) + 1;\n  let all = eval(AmountByMonth.join(\"+\"));\n  let average = (all / 12).toFixed(2);\n  let data1 = [{\n    x: Month_arr,\n    y: AmountByMonth,\n    type: 'bar'\n  }];\n  let data2 = [{\n    x: Month_arr,\n    y: AmountByMonth,\n    type: 'scatter'\n  }];\n  let data3 = [{\n    values: AmountByMonth,\n    labels: Month_arr,\n    type: 'pie',\n    hole: .4\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Plot, {\n    data: data1,\n    layout: {\n      width: 600,\n      height: 400,\n      title: 'Amount By Month'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Plot, {\n    data: data2,\n    layout: {\n      width: 600,\n      height: 400,\n      title: 'Amount By Month'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Plot, {\n    data: data3,\n    layout: {\n      width: 600,\n      height: 400,\n      title: 'Amount By Month'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"\\u5206\\u6790\\u62A5\\u544A\"), /*#__PURE__*/React.createElement(Paragraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"\\u56FE\\u4E2D\\u5C55\\u793A\\u4E86\\u60A8\\u5728\\u6DD8\\u5B9D\\u4E0A\\u6BCF\\u4E2A\\u6708\\u6D88\\u8D39\\u7684\\u91D1\\u989D\\uFF0C\\u60A8\\u53EF\\u4EE5\\u4ECE\\u4E2D\\u83B7\\u77E5\\u6BCF\\u4E2A\\u6708\\u6D88\\u8D39\\u91D1\\u989D\\u7684\\u5927\\u5C0F\\u3002\\u7531\\u56FE\\u53EF\\u77E5\\uFF0C\\u6D88\\u8D39\\u91D1\\u989D\\u6700\\u591A\\u7684\\u6708\\u4EFD\\u4E3A\", Max_month, \"\\u6708\\u4EFD\\uFF0C\\u5171\\u6D88\\u8D39\", maxNum, \"\\u5143\\uFF0C\\u6D88\\u8D39\\u91D1\\u989D\\u6700\\u5C11\\u7684\\u6708\\u4EFD\\u4E3A\", Min_month, \"\\u6708\\u4EFD\\uFF0C\\u5171\\u6D88\\u8D39\", minNum, \"\\u5143, \\u5E73\\u5747\\u6BCF\\u4E2A\\u6708\\u6D88\\u8D39\", average, \"\\u5143\\u3002\")));\n}","map":{"version":3,"sources":["C:/Users/Dell/PDMA/code/front/src/component/AmountByMonth.js"],"names":["React","Plot","axios","qs","Typography","Title","Paragraph","Text","getTaobaoAnalysis","id","setData","post","stringify","then","response","data","catch","error","console","log","AmountByMonth","Taobao","setTaobao","useState","useEffect","Month_arr","Array","from","length","fill","Amount","forEach","item","month","amount","maxNum","Math","max","apply","minNum","min","Max_month","findIndex","Min_month","all","eval","join","average","toFixed","data1","x","y","type","data2","data3","values","labels","hole","width","height","title"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\nimport axios from \"axios\";\r\nimport qs from \"qs\";\r\nimport {Typography} from \"antd\";\r\nconst { Title, Paragraph, Text } = Typography;\r\n\r\nconst getTaobaoAnalysis = async (id,setData)=>{\r\n    axios.post(\"http://localhost:8088/getTaobaoAnalysis\", qs.stringify({ id: id }))\r\n        .then(response =>{\r\n            setData(response.data)\r\n        })\r\n        .catch(error=>console.log(error));\r\n};\r\n\r\nexport function AmountByMonth() {\r\n    const [Taobao, setTaobao] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        getTaobaoAnalysis(1,(data)=>setTaobao(data)).catch()\r\n    },[]);\r\n\r\n    console.log(Taobao);\r\n    let Month_arr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    let AmountByMonth = Array.from({length:12}).fill(0)\r\n    let Amount = () =>{\r\n        Taobao.forEach(item =>{\r\n            AmountByMonth[item.month-1] += item.amount;\r\n        });\r\n    }\r\n    Amount();\r\n    let maxNum = Math.max.apply(null,AmountByMonth);\r\n    let minNum = Math.min.apply(null,AmountByMonth);\r\n    let Max_month = AmountByMonth.findIndex((item) => item === maxNum)+1;\r\n    let Min_month = AmountByMonth.findIndex((item) => item === minNum)+1;\r\n    let all = eval(AmountByMonth.join(\"+\"));\r\n    let average = (all/12).toFixed(2);\r\n\r\n    let data1 = [\r\n        {\r\n            x: Month_arr,\r\n            y: AmountByMonth,\r\n            type: 'bar'\r\n        }\r\n    ];\r\n\r\n    let data2 = [\r\n        {\r\n            x: Month_arr,\r\n            y: AmountByMonth,\r\n            type: 'scatter'\r\n        }\r\n    ];\r\n\r\n    let data3 = [\r\n        {\r\n            values: AmountByMonth,\r\n            labels: Month_arr,\r\n            type: 'pie',\r\n            hole: .4\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <Plot\r\n                data={data1}\r\n                layout={ {width: 600, height: 400, title: 'Amount By Month'} }\r\n            />\r\n            <Plot\r\n                data={data2}\r\n                layout={ {width: 600, height: 400, title: 'Amount By Month'} }\r\n            />\r\n            <Plot\r\n                data={data3}\r\n                layout={ {width: 600, height: 400, title: 'Amount By Month'} }\r\n            />\r\n            <Typography>\r\n                <Title>分析报告</Title>\r\n                <Paragraph>\r\n                    图中展示了您在淘宝上每个月消费的金额，您可以从中获知每个月消费金额的大小。由图可知，消费金额最多的月份为{Max_month}月份，共消费{maxNum}元，消费金额最少的月份为{Min_month}月份，共消费{minNum}元, 平均每个月消费{average}元。\r\n                </Paragraph>\r\n            </Typography>\r\n        </div>);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}